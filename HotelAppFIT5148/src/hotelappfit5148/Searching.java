/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hotelappfit5148;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import oracle.jdbc.OracleDriver;

/**
 *
 * @author Kaley
 */
public class Searching extends javax.swing.JPanel {
    private List countriesAndCities;
    private List room_Type;
    private MainFrame mf;
    /**
     * Creates new form Searching
     */
    public Searching(MainFrame mf) {
        initComponents();
        initDate();
        countriesAndCities = initHotel();
        room_Type = initRoom();
        
        jComboBox2.removeAllItems();
        jComboBox1.removeAllItems();
        jComboBox4.removeAllItems();
        
        for(Iterator iterator = countriesAndCities.iterator(); iterator.hasNext();){
              String[] cc = (String[])iterator.next();
              jComboBox2.addItem(cc[0]);
              jComboBox1.addItem(cc[1]);  
        }
        
        for(Iterator iterator = room_Type.iterator(); iterator.hasNext();){
            String room = iterator.next().toString();
            jComboBox4.addItem(room);
        }
        
        this.mf = mf;
    }
    
    // Set current date as value of check-in and check-out
    public void initDate(){
        jXDatePicker1.setDate(Calendar.getInstance().getTime());
        jXDatePicker2.setDate(Calendar.getInstance().getTime());
    }
    
    
    // Access hotel country and hotel city
    public List initHotel(){
        List countriesAndCities = new ArrayList();
        try {
            DriverManager.registerDriver(new OracleDriver());
            Connection conn = Database.getInstance().getDBConnection("FIT5148A");
            DatabaseMetaData md = conn.getMetaData();

            ResultSet rs = md.getTables(null, null, "%", null);
            Statement stmt = conn.createStatement();

            ResultSet rset = stmt.executeQuery("select country, city from hotel");
            ResultSetMetaData metadata = rset.getMetaData();
            while (rset.next()) {
                String[] rsets = new String[2];
                rsets[0] = rset.getString(1);
                rsets[1] = rset.getString(2);
                countriesAndCities.add(rsets);
            }
        } catch (SQLException f) {
            System.out.println(f.getMessage());
            f.printStackTrace();
        }
        return countriesAndCities;
    }
    
    // Access room type and rate range
    public List initRoom(){
        List roomType= new ArrayList();
        try {
            DriverManager.registerDriver(new OracleDriver());
            Connection conn = Database.getInstance().getDBConnection("FIT5148B");
            DatabaseMetaData md = conn.getMetaData();

            ResultSet rs = md.getTables(null, null, "%", null);
            Statement stmt = conn.createStatement();

            ResultSet rset = stmt.executeQuery("select room_type from room");
            ResultSetMetaData metadata = rset.getMetaData();
            while (rset.next()) {
                String room_type = rset.getString(1);
                roomType.add(room_type);
            }
        } catch (SQLException f) {
            System.out.println(f.getMessage());
            f.printStackTrace();
        }
        return roomType;
        
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        search = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jComboBox3 = new javax.swing.JComboBox<>();
        jComboBox4 = new javax.swing.JComboBox<>();
        jXDatePicker1 = new org.jdesktop.swingx.JXDatePicker();
        jXDatePicker2 = new org.jdesktop.swingx.JXDatePicker();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jCheckBox1 = new javax.swing.JCheckBox();

        search.setLabel("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        jLabel1.setText("Country:");

        jLabel2.setText("City:");

        jLabel3.setText("Check-in");

        jLabel4.setText("Check-out");

        jLabel5.setText("Room type:");

        jLabel6.setText("Rate range:");

        jLabel7.setText("Room:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1-200", "200-400", "400-600", "600-800", "800-1000", ">1000" }));

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "item1", "item2", "item3", "item4" }));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object[0][0],
            new String[]{
                "Hotel name", "Room number", "Room type", "Price"
            }
        )
        {public boolean isCellEditable(int row, int column) {return false;}}
    );
    jScrollPane1.setViewportView(jTable1);

    jCheckBox1.setText("available");

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(15, 15, 15)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel3)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2)))
                        .addComponent(jLabel7))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(23, 23, 23)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jCheckBox1)))
                        .addGroup(layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jXDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jXDatePicker2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(18, 18, 18))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(search)
                    .addGap(67, 67, 67)))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(18, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel1)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel2)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(25, 25, 25)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel3)
                .addComponent(jXDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(33, 33, 33)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel4)
                .addComponent(jXDatePicker2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(31, 31, 31)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel5)
                .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(26, 26, 26)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel6)
                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel7)
                .addComponent(jCheckBox1))
            .addGap(18, 18, 18)
            .addComponent(search)
            .addGap(33, 33, 33))
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(17, 17, 17))
    );
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    // get customer id
        public boolean getCustomer_id(String customer_id){
            int cusid = 0;
            boolean flag = false;
            
            // search customer in customer table with customer id
                String search = "SELECT customer_id from customer where customer_id = " + Integer.valueOf(customer_id);
                //System.out.println(search);
                    try {
                        DriverManager.registerDriver(new OracleDriver());
                        Connection conn = Database.getInstance().getDBConnection("FIT5148B");
                        Statement stmt = conn.createStatement();

                        ResultSet rset = stmt.executeQuery(search);
                            if(rset.next()){
                                flag = !rset.getString(1).isEmpty();
                            }
                    } catch (SQLException ex) {
                        Logger.getLogger(Searching.class.getName()).log(Level.SEVERE, null, ex);
                    }
            
            return flag;
        }
    
    
    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        
       DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        
        String country = String.valueOf(jComboBox2.getSelectedItem());
        String city = String.valueOf(jComboBox1.getSelectedItem());
        String room_type = String.valueOf(jComboBox4.getSelectedItem());
        String rate_range = String.valueOf(jComboBox3.getSelectedItem());
        
        SimpleDateFormat formater = new SimpleDateFormat("dd/MM/yyyy");
        String check_in = formater.format(jXDatePicker1.getDate());
        String check_out = formater.format(jXDatePicker2.getDate());
        
        boolean avaliable = jCheckBox1.isSelected();
        String avail = "";
        
        if(avaliable){
            avail = "true";
        }
        else{
            avail = "false";
        }
        
        try {
            
            
            String search = "SELECT hotel_name, room_number, room_type, price from room@FIT5148B r, hotel@FIT5148A h WHERE h.country =  '" + country + "' and h.city = '" + city + "'" + " and h.hotel_id = r.hotel_id and r.room_type = '" + room_type + "'";
            
            //System.out.println(search);
            
            Connection conn = Database.getInstance().getDBConnection("FIT5148A");
            Statement stat = conn.createStatement();
            ResultSet rset = stat.executeQuery(search);
            while (rset.next()) {
                String[] rsets = new String[4];
                rsets[0] = rset.getString(1);
                rsets[1] = rset.getString(2);
                rsets[2] = rset.getString(3);
                rsets[3] = rset.getString(4);
                
                //System.out.println(rsets[0] + ", " + rsets[1] + ", " + rsets[2] + ", " + rsets[3]);
                
                model.addRow(rsets);
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Searching.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        // double click a row and go to the booking GUI
        jTable1.addMouseListener(new MouseAdapter(){
            public void mouseClicked(MouseEvent e){
                
                if(e.getClickCount() == 2){
                    
                    // access seleced row data
                    javax.swing.JTable target = (javax.swing.JTable)e.getSource();
                    int row1 = target.getSelectedRow();
                    
                    String[] rowData = new String[4];
                    
                    for(int i = 0; i < 4; i++){
                        rowData[i] = (String)target.getValueAt(row1, i);
                    }
//                        
//                    for(int i = 0; i < 4; i++){
//                        System.out.print(rowData[i]);
//                    }

                String customer_id = javax.swing.JOptionPane.showInputDialog("Please input your customer ID:");
                //System.out.println(customer_id);
                 
                
                 target = (javax.swing.JTable)e.getSource();
                 int row2 = target.getSelectedRow();
                 String room_type = (String)target.getValueAt(row2, 2);
                 double price = Double.valueOf((String)target.getValueAt(row2, 3));
                 //System.out.println(room_type);
                 
                  // access booking GUI
                  
                  if(getCustomer_id(customer_id)){
                      mf.bookingActionPerformed(room_type, check_in, check_out, price, customer_id, rowData);
                  }
                  else{
                      javax.swing.JOptionPane.showMessageDialog(Searching.this, "customer does not exist");
                  }
                }
            }
        });
    }//GEN-LAST:event_searchActionPerformed

    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker1;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker2;
    private javax.swing.JButton search;
    // End of variables declaration//GEN-END:variables
}


