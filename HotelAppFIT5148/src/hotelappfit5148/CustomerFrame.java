/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hotelappfit5148;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import java.math.BigDecimal;
import java.text.SimpleDateFormat;
import javax.swing.DefaultComboBoxModel;
/**
 *
 * @author situsnow
 */
public class CustomerFrame extends javax.swing.JFrame {
    
    Object columnHeaders[] = {"CUSTOMER_ID","Title", "First Name", "Last Name",
        "Citizen Id", "DateOfBirth", "Country", "City", "Street",
        "PostalCode", "MembershipTier","MembershipCredit", "Phone", "Email"};
    Object data[][] = {{}};
    DefaultTableModel dtm = new DefaultTableModel(data, columnHeaders);
    public final static String ALL_TIER = "All Tier";
    public final static String SELECT_CUSTOMER = "SELECT CUSTOMER_ID, TITLE, FIRST_NAME, LAST_NAME, "
                    + "CITIZEN_ID, DOB, COUNTRY, CITY, STREET, POSTAL_CODE, "
                    + "MEMBERSHIP_TIER, MEMBERSHIP_CREDITS, PHONE_NUM, EMAIL FROM CUSTOMER "
            + "INNER JOIN MEMBERSHIP ON CUSTOMER.TIER_ID = MEMBERSHIP.TIER_ID";
    public final static String SELECT_CUSTOMER_WITH_TIER = " AND MEMBERSHIP.MEMBERSHIP_TIER = '";
    public final static String SELECT_MEMBERSHIP_TIER = "SELECT MEMBERSHIP_TIER FROM MEMBERSHIP";
    public final static String DELETE_CUSTOMER = "DELETE CUSTOMER WHERE CUSTOMER_ID = ";
    
    public final static String UPDATE_CUST = "Update";
    public final static String INSERT_CUST = "Insert";
    
    public final static String DB_DATE_FORMAT = "yyyy/MM/dd";
    
    public final static String MULTIPLE_SELECTION = "Please select one customer only.";
    public final static String NO_SELECTION = "Please select at least one customer.";
    public final static String CONFIRM_DELETE_CUSTOMER = "The customer information will be deleted. Please click Yes to proceed.";
    public final static String UPDATE_CUSTOMER_S = "Customer is deleted. Please refresh.";
    public final static String UPDATE_CUSTOMER_F = "Fail to delete customer, please re-try later.";
    
    private static CallableStatement cstmt;
    private static String CALLSP_INSERTORUPDATECUSTOMER = "{call insertOrUpdateCustomer(?,?,?,?,?,?,?,?,?,?,?,?,?)}";
    /**
     * Creates new form Customer
     */
    public CustomerFrame() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(700, 500));
        setSize(800,500);

        jComboBox1.setModel(new DefaultComboBoxModel(CustomerFrame.getMembershipTier()));

        jButton1.setText("Search Customer");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(dtm);
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Membership Tier");

        jButton2.setText("Insert Customer");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Update Customer");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setLabel("Homepage");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Delete Customer");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jButton4))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(126, 126, 126)
                                .addComponent(jButton2)
                                .addGap(34, 34, 34)
                                .addComponent(jButton3)
                                .addGap(40, 40, 40)
                                .addComponent(jButton5)))
                        .addGap(0, 161, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton5))
                .addGap(15, 15, 15))
        );

        setBounds(0, 0, 814, 422);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String action = "Insert";
            /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerInsertUpdateDialog(null, action).setVisible(true);
            }
        });
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        dispose();        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        int selectedRowCount = jTable1.getSelectedRowCount();
        if (selectedRowCount > 1){
            JOptionPane.showMessageDialog(null, MULTIPLE_SELECTION);
        }else if (selectedRowCount == 0){
            JOptionPane.showMessageDialog(null, NO_SELECTION);
        }else{
            int confirmDelete = JOptionPane.showConfirmDialog(null, CONFIRM_DELETE_CUSTOMER, null, JOptionPane.YES_NO_OPTION);
            if (JOptionPane.YES_OPTION == confirmDelete){
                int selectedCustomer = jTable1.getSelectedRow();
                int customerId = ((BigDecimal)jTable1.getModel().getValueAt(selectedCustomer, 0)).intValue();
                
                StringBuffer sb = new StringBuffer(DELETE_CUSTOMER);
                sb.append(customerId);
                
                boolean updateResult = Database.getInstance().updateTable(Database.DB_FIT5148B, sb.toString());
                
                if (updateResult == true){
                    JOptionPane.showMessageDialog(null, UPDATE_CUSTOMER_S);
                }else{
                    JOptionPane.showMessageDialog(null, UPDATE_CUSTOMER_F);
                }
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            // TODO add your handling code here:
            //Remove table content in case there's any
            for (int i = dtm.getRowCount() - 1; i >= 0; i--){
                dtm.removeRow(i);
            }
            
            String selectedMembershipTier = String.valueOf(jComboBox1.getSelectedItem());
            StringBuffer sbSQL = new StringBuffer(SELECT_CUSTOMER);
            String viewCustSQL = "";
            if (!ALL_TIER.equals(selectedMembershipTier)){
                sbSQL.append(SELECT_CUSTOMER_WITH_TIER + selectedMembershipTier +"'");
            }    
            
            viewCustSQL = sbSQL.toString();
            
            ResultSet rset = Database.getInstance().selectRecords(Database.DB_FIT5148B, viewCustSQL);
            ResultSetMetaData mdata = rset.getMetaData();
            int numberOfColumns = mdata.getColumnCount();
            while (rset.next()) {
                Object[] rowData = new Object[numberOfColumns];
                for (int i = 0; i < rowData.length; i++) {
                    rowData[i] = rset.getObject(i + 1);
                }
                dtm.addRow(rowData);
            }
            
            //Close connection
            Database.getInstance().closeDBConnection();
        } catch (SQLException ex) {
            //Logger.getLogger(CustomerFrame.class.getName()).log(Level.SEVERE, null, ex);
            ex.printStackTrace();
        }
    }

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:        
        int selectedRowCount = jTable1.getSelectedRowCount();
        if (selectedRowCount > 1){
            JOptionPane.showMessageDialog(null, MULTIPLE_SELECTION);
        }else if (selectedRowCount == 0){
            JOptionPane.showMessageDialog(null, NO_SELECTION);
        }else{
            CustomerBean customer = this.constructCustomerBean();
            /* Create and display the form */
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new CustomerInsertUpdateDialog(customer, UPDATE_CUST).setVisible(true);
                }
            });
        }
    }

    private CustomerBean constructCustomerBean(){
        CustomerBean customer = new CustomerBean();
        
        int selectedCustomer = jTable1.getSelectedRow();     
        
        customer.setCustomer_id(((BigDecimal)jTable1.getModel().getValueAt(selectedCustomer, 0)).intValue());
        customer.setTitle((String)jTable1.getModel().getValueAt(selectedCustomer, 1));
        customer.setFirstName((String)jTable1.getModel().getValueAt(selectedCustomer, 2));
        customer.setLastName((String)jTable1.getModel().getValueAt(selectedCustomer, 3));
        customer.setCitizenID(((BigDecimal)jTable1.getModel().getValueAt(selectedCustomer, 4)).intValue());
        
        //Cast SQL Date format
        SimpleDateFormat dateFormat = new SimpleDateFormat(DB_DATE_FORMAT);        
        customer.setDOB(dateFormat.format(jTable1.getModel().getValueAt(selectedCustomer, 5)));
        
        customer.setCountry((String)jTable1.getModel().getValueAt(selectedCustomer, 6));
        customer.setCity((String)jTable1.getModel().getValueAt(selectedCustomer, 7));
        customer.setStreet((String)jTable1.getModel().getValueAt(selectedCustomer, 8));
        customer.setPostalCode(((BigDecimal)jTable1.getModel().getValueAt(selectedCustomer, 9)).intValue());
        customer.setMembership((String)jTable1.getModel().getValueAt(selectedCustomer, 10));
        customer.setMembershipCredit(((BigDecimal)jTable1.getModel().getValueAt(selectedCustomer, 11)).intValue());
        customer.setPhoneNumber(((BigDecimal)jTable1.getModel().getValueAt(selectedCustomer, 12)).intValue());
        customer.setEmail((String)jTable1.getModel().getValueAt(selectedCustomer, 13));
        
        return customer;
    }

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(CustomerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(CustomerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(CustomerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(CustomerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        
//      
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new CustomerFrame().setVisible(true);
//            }
//        });
//    }
    
    public static String[] getMembershipTier(){        
        
        try{
            ResultSet rset = Database.getInstance().selectRecords(Database.DB_FIT5148B, SELECT_MEMBERSHIP_TIER);
            
            List<String> membershipList = new ArrayList<String>();
            membershipList.add(ALL_TIER);
            while(rset.next()){
                membershipList.add(rset.getString(1));
            }
            
            Database.getInstance().closeDBConnection();
            String[] result = membershipList.toArray(new String[membershipList.size()]);
            return result;
        }catch (SQLException ex){
            ex.printStackTrace();
        }
        
        return null;
    }
    
    public boolean callSPInsertOrUpdateCustomer(CustomerBean customer, String dbName, String action){
        Connection dbConnection = null;
        
        try{
            dbConnection = Database.getInstance().getDBConnection(dbName);
            cstmt = dbConnection.prepareCall(CALLSP_INSERTORUPDATECUSTOMER);
            
            cstmt.setInt(1, customer.getCustomer_id());
            cstmt.setString(2, customer.getTitle());
            cstmt.setString(3, customer.getFirstName());
            cstmt.setString(4, customer.getLastName());
            cstmt.setInt(5, customer.getCitizenID());
            cstmt.setString(6, customer.getDOB());
            cstmt.setString(7, customer.getCountry());
            cstmt.setString(8, customer.getCity());
            cstmt.setString(9, customer.getStreet());
            cstmt.setInt(10, customer.getPostalCode());
            cstmt.setInt(11, customer.getPhoneNumber());
            cstmt.setString(12, customer.getEmail());
            
            cstmt.setString(13, action);
            
            cstmt.executeUpdate();
            
            cstmt.close();
            return true;
            
        } catch (SQLException ex) {
            ex.printStackTrace();
            return false;
        } 
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
