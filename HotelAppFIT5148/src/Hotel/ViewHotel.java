/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Hotel;

import Util.WarningMessage;
import hotelappfit5148.Database;
import javax.swing.table.DefaultTableModel;
import oracle.jdbc.OracleDriver;
import java.sql.*;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author thaonguyen
 */
public class ViewHotel  extends javax.swing.JFrame {

    Object columnHeaders[] = {"HOTEL_ID", "HOTEL_NAME", "HOTEL_TYPE", "CONSTUCTION_YEAR", "COUNTRY", "CITY", "ADDRESS", "CONTACT_NUMBER", "EMAIL"};
    Object data[][] = {{}};
    DefaultTableModel dtm = new DefaultTableModel(data, columnHeaders);
    Connection conn = null;
    Statement stmt = null;

    /**
     * Creates new form ViewHotel
     */
    public ViewHotel() {
        initComponents();
        showAllHotelToTable();
    }

    private void showAllHotelToTable() {
        conn = Database.getInstance().getDBConnection(Database.DB_FIT5148A);
        dtm.setRowCount(0);
        try {
            DriverManager.registerDriver(new OracleDriver());
            stmt = conn.createStatement();
            ResultSet rset = stmt.executeQuery("select hotel_id, hotel_name, hotel_type, "
                    + "construction_year, country, city, address, "
                    + "contact_number, email from hotel  order by hotel_id DESC");

            ResultSetMetaData mdata = rset.getMetaData();
            int numberOfColumns = mdata.getColumnCount();
            while (rset.next()) {
                Object[] rowData = new Object[numberOfColumns];
                for (int i = 0; i < rowData.length; i++) {
                    rowData[i] = rset.getObject(i + 1);
                }
                dtm.addRow(rowData);
            }
            Database.getInstance().closeDBConnection();
        } catch (SQLException f) {
            System.out.println(f.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        HotelScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        searchButton = new javax.swing.JButton();
        newHotel = new javax.swing.JButton();
        updateHotel = new javax.swing.JButton();
        deleteHotel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(dtm);
        HotelScrollPane1.setViewportView(jTable1);

        jLabel1.setText("View Hotel");

        jLabel2.setText("Hotel Type");

        List<String> typeListCombox = new ArrayList<String>();
        typeListCombox.add("All Types");
        typeListCombox.addAll(getHotelType());
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(typeListCombox.toArray()));

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        newHotel.setText("New Hotel");
        newHotel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newHotelActionPerformed(evt);
            }
        });

        updateHotel.setText("Update");
        updateHotel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateHotelActionPerformed(evt);
            }
        });

        deleteHotel.setText("Delete");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(HotelScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 713, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(searchButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addComponent(newHotel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(updateHotel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteHotel)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(HotelScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newHotel)
                    .addComponent(updateHotel)
                    .addComponent(deleteHotel))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jLabel1.getAccessibleContext().setAccessibleName("viewHotelLabel");
        jLabel1.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        dtm.setRowCount(0);

        try {
            // TODO add your handling code here:

            String selectedHotelType = String.valueOf(jComboBox2.getSelectedItem());
            StringBuffer sbSQL = new StringBuffer("select hotel_id, hotel_name, hotel_type, "
                    + "construction_year, country, city, address, "
                    + "contact_number, email from hotel");
            if (!"All Types".equals(selectedHotelType)) {
                sbSQL.append(" where hotel_type = '" + selectedHotelType + "'");
            }
            sbSQL.append(" order by hotel_id DESC");
            ResultSet rset = Database.getInstance().selectRecords(Database.DB_FIT5148A, sbSQL.toString());
            ResultSetMetaData mdata = rset.getMetaData();
            int numberOfColumns = mdata.getColumnCount();
            while (rset.next()) {
                Object[] rowData = new Object[numberOfColumns];
                for (int i = 0; i < rowData.length; i++) {
                    rowData[i] = rset.getObject(i + 1);
                }
                dtm.addRow(rowData);
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }


    }//GEN-LAST:event_searchButtonActionPerformed

    private void newHotelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newHotelActionPerformed
        // TODO add your handling code here:
        NewHotel hotelForm = new NewHotel();
        hotelForm.setVisible(true);

//        NewHotelDialog newHotelDialog = new NewHotelDialog();
//        newHotelDialog.setVisible(true);
//        
//        dtm.setRowCount(0);
//        conn = DBConnection.getDBConnection(Database.DB_FIT5148A);
//        try {
//            DriverManager.registerDriver(new OracleDriver());
//            stmt = conn.createStatement();
//            ResultSet rset = stmt.executeQuery("select hotel_id, hotel_name, hotel_type, "
//                    + "construction_year, country, city, address, "
//                    + "contact_number, email from hotel order by hotel_id DESC");
//
//            ResultSetMetaData mdata = rset.getMetaData();
//            int numberOfColumns = mdata.getColumnCount();
//            while (rset.next()) {
//                Object[] rowData = new Object[numberOfColumns];
//                for (int i = 0; i < rowData.length; i++) {
//                    rowData[i] = rset.getObject(i + 1);
//                }
//                dtm.addRow(rowData);
//            }
//            conn.close();
//
//        } catch (SQLException f) {
//            System.out.println(f.getMessage());
//        }

    }//GEN-LAST:event_newHotelActionPerformed

    private void updateHotelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateHotelActionPerformed
        // TODO add your handling code here:
        int selectedRowCount = jTable1.getSelectedRowCount();
        if (selectedRowCount != 1) {
            JOptionPane.showMessageDialog(null, WarningMessage.SELECT_ONE_RECORD);
        } else {
            HotelBean hotel = this.constructHotelBean();
            /* Create and display the form */
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new UpdateHotel(hotel).setVisible(true);
                }
            });
        }
    }//GEN-LAST:event_updateHotelActionPerformed

    private HotelBean constructHotelBean() {
        HotelBean hotel = new HotelBean();

        int selectedHotel = jTable1.getSelectedRow();

//        System.out.print(selectedHotel.);
        hotel.setHotelId(Long.parseLong(jTable1.getModel().getValueAt(selectedHotel, 0).toString()));
        hotel.setHotelName((String) jTable1.getModel().getValueAt(selectedHotel, 1));
        hotel.setHotelType((String) jTable1.getModel().getValueAt(selectedHotel, 2));
        hotel.setConstructionYear(Integer.parseInt(jTable1.getModel().getValueAt(selectedHotel, 3).toString()));
        hotel.setCountry((String) jTable1.getModel().getValueAt(selectedHotel, 4));
        hotel.setCity((String) jTable1.getModel().getValueAt(selectedHotel, 5));
        hotel.setAddress((String) jTable1.getModel().getValueAt(selectedHotel, 6));
        hotel.setContactNumber((String) jTable1.getModel().getValueAt(selectedHotel, 7));
        hotel.setEmail((String) jTable1.getModel().getValueAt(selectedHotel, 8));

        return hotel;
    }

    public List<String> getHotelType() {
        String getHotelType = "select distinct hotel_type from hotel order by hotel_type";

        try {
            ResultSet rset = Database.getInstance().selectRecords(Database.DB_FIT5148A, getHotelType);

            List<String> hotelTypeList = new ArrayList<String>();
            while (rset.next()) {
                hotelTypeList.add(rset.getString(1));
            }
            Database.getInstance().closeDBConnection();
            return hotelTypeList;
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }

        return null;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewHotel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewHotel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewHotel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewHotel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewHotel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane HotelScrollPane1;
    private javax.swing.JButton deleteHotel;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton newHotel;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton updateHotel;
    // End of variables declaration//GEN-END:variables
}
