/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Membership;

import Util.SQLStatement;
import Util.WarningMessage;
import hotelappfit5148.Database;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author situsnow
 */
public class MembershipInsertUpdateDialog extends javax.swing.JDialog {

    
    private static CallableStatement cstmt;    
    private final static String DISCOUNT_PATTERN = "0.([0-9]{1,2})";
    /**
     * Creates new form MembershipInsertUpdateDialog
     */
    public MembershipInsertUpdateDialog(MembershipBean membership, String action) {
        initComponents();
        if (MembershipPanel.UPDATE_MEMBERSHIP.equals(action)){
            initMembershipInformation(membership);
            jButton1.setVisible(false);
        }else{
            jButton2.setVisible(false);
        }
    }
    
    private void initMembershipInformation(MembershipBean membership){
        jTextField1.setText(String.valueOf(membership.getTier_id()));
        jTextField2.setText(membership.getMembership_tier());
        jTextField3.setText(String.valueOf(membership.getTier_credit()));
        jTextField4.setText(String.valueOf(membership.getDiscount()));
        jTextField5.setText(membership.getOther_rewards());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        jLabel1.setText("Tier ID");

        jTextField1.setEnabled(false);

        jLabel2.setText("Membership Tier");

        jLabel3.setText("Tier Credit");

        jLabel4.setText("Discount");

        jLabel5.setText("Other Rewards");

        jLabel6.setText("(e.g. 0.9)");

        jButton1.setText("Insert");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Cancel");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel7.setForeground(java.awt.Color.red);
        jLabel7.setText("*");

        jLabel8.setForeground(java.awt.Color.red);
        jLabel8.setText("*");

        jLabel9.setForeground(java.awt.Color.red);
        jLabel9.setText("*");

        jLabel10.setForeground(java.awt.Color.red);
        jLabel10.setText("*");

        jLabel11.setText("Mandatory fields");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel10))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(jLabel7))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel8))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField3)
                                    .addComponent(jTextField4))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel11))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)))))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField3, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int cancelInput = JOptionPane.showConfirmDialog(null, WarningMessage.DISCARD_CHANGE, null, JOptionPane.YES_NO_OPTION);
        if (JOptionPane.NO_OPTION == cancelInput){
            dispose();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here: Update
        if (!validateInput()){
            return;
        }
        
        
        performInsertOrUpdate(MembershipPanel.UPDATE_MEMBERSHIP);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here: Insert
        if (!validateInput()){
            return;
        }
        
        if (!checkExistedMembership(jTextField2.getText())){
            
            JOptionPane.showMessageDialog(null, WarningMessage.EXISTED_MEMBERSHIP);
            return;
        }
        performInsertOrUpdate(MembershipPanel.INSERT_MEMBERSHIP);
            
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private boolean validateInput(){
        
        if ("".equals(jTextField2.getText())){
            JOptionPane.showMessageDialog(null, WarningMessage.EMPTY_MEMBERSHIP_TIER);
            return false;
        }
        
        if ("".equals(jTextField3.getText())){
            JOptionPane.showMessageDialog(null, WarningMessage.EMPTY_MEMBERSHIP_CREDIT);
            return false;
        }
        
        if ("".equals(jTextField4.getText())){
            JOptionPane.showMessageDialog(null, WarningMessage.EMPTY_MEMBERSHIP_DISCOUNT);
            return false;
        }
        
        if (!Pattern.matches(DISCOUNT_PATTERN, jTextField4.getText())){
            JOptionPane.showMessageDialog(null, WarningMessage.INVALID_MEMBERSHIP_DISCOUNT_1);
            return false;
        }else{
            double discount = Double.valueOf(jTextField4.getText());
            
            if (discount >= 1 || discount == 0){
                JOptionPane.showMessageDialog(null, WarningMessage.INVALID_MEMBERSHIP_DISCOUNT_2);
                return false;
            }
        }
        
        return true;
    }
    private MembershipBean getUserInputOfMembership(){
        MembershipBean membership = new MembershipBean();
        
        if (null != jTextField1.getText() && !"".equals(jTextField1.getText())){
            membership.setTier_id(Integer.valueOf(jTextField1.getText()));
        }
        
        membership.setMembership_tier(jTextField2.getText());
        membership.setTier_credit(Integer.valueOf(jTextField3.getText()));
        membership.setDiscount(Double.valueOf(jTextField4.getText()));
        membership.setOther_rewards(jTextField5.getText());
        
        return membership;
    }
    
    private void performInsertOrUpdate(String action){
        MembershipBean membership = getUserInputOfMembership();
        boolean result = callSPInsertOrUpdateMembership(membership, 
                        Database.DB_FIT5148B, action);
        Database.getInstance().closeDBConnection();
        
        if (result == true){
            JOptionPane.showMessageDialog(null, WarningMessage.MEMBERSHIP_INSERT_UPDATE_S);
            dispose();
        }else{
            JOptionPane.showMessageDialog(null, WarningMessage.MEMBERSHIP_INSERT_UPDATE_F);
        }

    }
    public boolean callSPInsertOrUpdateMembership(MembershipBean membership, String dbName, String action){
        Connection dbConnection = null;
        
        try{
            dbConnection = Database.getInstance().getDBConnection(dbName);
            cstmt = dbConnection.prepareCall(SQLStatement.CALLSP_INSERTORUPDATEMEMBERSHIP);
            
            cstmt.setInt(1, membership.getTier_id());
            cstmt.setString(2, membership.getMembership_tier());
            cstmt.setInt(3, membership.getTier_credit());
            cstmt.setDouble(4, membership.getDiscount());
            
            cstmt.setString(5, membership.getOther_rewards());
            
            cstmt.setString(6, action);

            cstmt.executeUpdate();

            cstmt.close();
            
            return true;
            
        } catch (SQLException ex) {
            ex.printStackTrace();
            return false;
        }
        
    }
    
    private boolean checkExistedMembership(String membershipTier){
        int number = 1;
        
        try { 
            ResultSet rset = Database.getInstance().selectRecords(Database.DB_FIT5148B,
                    SQLStatement.CHECK_MEMBERSHIP_EXISTANCE_B4INSERT + membershipTier + "'");
            if (rset.next()){
                number = rset.getInt(1);
            }
            rset.close();
            Database.getInstance().closeDBConnection();
            
            if (number == 1){
                return false;
            }
        } catch (SQLException ex) {
            Logger.getLogger(MembershipInsertUpdateDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return true;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration//GEN-END:variables
}
