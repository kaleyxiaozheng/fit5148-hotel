/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Room;

import hotelappfit5148.Database;
import Util.WarningMessage;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author thaonguyen
 */
public class InsertUpdateHRoomDialog extends javax.swing.JDialog {

    private RoomBean room;

    /**
     * Creates new form InsertUpdateHRoomDialog
     */
    public InsertUpdateHRoomDialog(RoomBean roomTempt, String action) {
//        super(parent, modal);
        initComponents();
        
        if (WarningMessage.UPDATE_ACT.equals(action)) {
            room = roomTempt;
            viewRoomDetail(roomTempt);
            this.roomNumberText.setEditable(false);
            this.hotelIdText.setEditable(false);
            newRoomjButton1.setVisible(false);
        } else {
            room = new RoomBean();
            this.roomNumberText.setText(Database.getInstance().getSequenceNextval(Database.DB_FIT5148B, "room_seq").toString());

            updateRoomjButton2.setVisible(false);
        }
    }

    private void viewRoomDetail(RoomBean roomTempt) {
        this.room = roomTempt;
        this.hotelIdText.setText(room.getHotelId().toString());
        this.roomNumberText.setText(room.getRoomNumber());
        this.roomTypejComboBox1.setSelectedItem(room.getRoomType());
        this.priceText.setText(Float.toString(room.getPrice()));
        this.descriptionTextArea.setText(room.getDescription());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        roomNumberLabel = new javax.swing.JLabel();
        roomNumberText = new javax.swing.JTextField();
        hotelIdLabel = new javax.swing.JLabel();
        hotelIdText = new javax.swing.JTextField();
        roomTypeLabel = new javax.swing.JLabel();
        roomTypejComboBox1 = new javax.swing.JComboBox();
        priceLabel = new javax.swing.JLabel();
        priceText = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionTextArea = new javax.swing.JTextArea();
        descriptionLabel = new javax.swing.JLabel();
        newRoomjButton1 = new javax.swing.JButton();
        updateRoomjButton2 = new javax.swing.JButton();
        CancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        roomNumberLabel.setText("Room Number *");

        hotelIdLabel.setText("Hotel ID *");

        roomTypeLabel.setText("Room Type");

        roomTypejComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Single", "Double", "Studio", "Suite" }));

        priceLabel.setText("Price *");

        priceText.setText("0");

        descriptionTextArea.setColumns(20);
        descriptionTextArea.setRows(5);
        jScrollPane1.setViewportView(descriptionTextArea);

        descriptionLabel.setText("Description");

        newRoomjButton1.setText("New Room");
        newRoomjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newRoomjButton1ActionPerformed(evt);
            }
        });

        updateRoomjButton2.setText("Update Room");
        updateRoomjButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateRoomjButton2ActionPerformed(evt);
            }
        });

        CancelButton.setText("Cancel");
        CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(newRoomjButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(updateRoomjButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CancelButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(roomNumberLabel)
                            .addComponent(hotelIdLabel)
                            .addComponent(roomTypeLabel)
                            .addComponent(priceLabel)
                            .addComponent(descriptionLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(roomNumberText, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                                .addComponent(hotelIdText))
                            .addComponent(roomTypejComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(priceText, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(roomNumberText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roomNumberLabel))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(hotelIdLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(hotelIdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roomTypeLabel)
                    .addComponent(roomTypejComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priceLabel)
                    .addComponent(priceText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(descriptionLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateRoomjButton2)
                    .addComponent(CancelButton)
                    .addComponent(newRoomjButton1))
                .addGap(0, 29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newRoomjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newRoomjButton1ActionPerformed
        // TODO add your handling code here:
//                RoomBean room = new RoomBean();
        if (this.hotelIdText.getText().trim().isEmpty() || this.roomNumberText.getText().trim().isEmpty() || this.priceText.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, WarningMessage.MANDATORY_FIELD_EMPTY);
            return;
        }

        try {
            room.setRoomNumber(this.roomNumberText.getText().trim());
            room.setHotelId(Long.parseLong(this.hotelIdText.getText().trim()));
            room.setRoomType(this.roomTypejComboBox1.getSelectedItem().toString());
            room.setPrice(Float.parseFloat(this.priceText.getText().trim()));
            room.setDescription(this.descriptionTextArea.getText().trim());
        } catch (Exception ex) {

            JOptionPane.showMessageDialog(null, WarningMessage.INPUT_FORMAT_ER);
            return;
        }

        PreparedStatement preparedStatement = null;
        Connection dbConnection = Database.getInstance().getDBConnection(Database.DB_FIT5148B);
        String insertTableSQL = "INSERT INTO room"
                + "(room_number, hotel_id, room_type, price, description) VALUES"
                + "(?,?,?,?,?)";

        try {
            preparedStatement = dbConnection.prepareStatement(insertTableSQL);
            preparedStatement.setString(1, room.getRoomNumber());
            preparedStatement.setLong(2, room.getHotelId());
            preparedStatement.setString(3, room.getRoomType());
            preparedStatement.setFloat(4, room.getPrice());
            preparedStatement.setString(5, room.getDescription());
            preparedStatement.executeUpdate();

            JOptionPane.showMessageDialog(null, WarningMessage.CREATE_S);
            preparedStatement.close();
            Database.getInstance().closeDBConnection();
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
            if (ex.getErrorCode() == 1) {
                JOptionPane.showMessageDialog(null, WarningMessage.UNIQUE_CONSTRAINT_ROOM);
                return;

            };
            if (ex.getErrorCode() == 20001) {

                JOptionPane.showMessageDialog(null, WarningMessage.NOT_EXIST_HOTEL_ID_ER);
                return;

            }
            JOptionPane.showMessageDialog(null, WarningMessage.UNKNOWN_ERROR);
        };

    }//GEN-LAST:event_newRoomjButton1ActionPerformed

    private void updateRoomjButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateRoomjButton2ActionPerformed
        if (this.hotelIdText.getText().trim().isEmpty() || this.roomNumberText.getText().trim().isEmpty() || this.priceText.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, WarningMessage.MANDATORY_FIELD_EMPTY);
            return;
        }

        try {
//            room.setRoomNumber(this.roomNumberText.getText().trim());
//            room.setHotelId(Long.parseLong(this.hotelIdText.getText().trim()));
            room.setRoomType(this.roomTypejComboBox1.getSelectedItem().toString());
            room.setPrice(Float.parseFloat(this.priceText.getText().trim()));
            room.setDescription(this.descriptionTextArea.getText().trim());
        } catch (Exception ex) {

            JOptionPane.showMessageDialog(null, WarningMessage.INPUT_FORMAT_ER);
            return;
        }

        PreparedStatement preparedStatement = null;
        Connection dbConnection = Database.getInstance().getDBConnection(Database.DB_FIT5148B);
        String insertTableSQL = "update room set "
                + "room_type = ?, price = ?, description = ? where "
                + " room_number = ? and hotel_id = ? ";
        try {
            preparedStatement = dbConnection.prepareStatement(insertTableSQL);
         
            preparedStatement.setString(1, room.getRoomType());
            preparedStatement.setFloat(2, room.getPrice());
            preparedStatement.setString(3, room.getDescription());
            preparedStatement.setString(4, room.getRoomNumber());
            preparedStatement.setLong(5, room.getHotelId());
            preparedStatement.executeUpdate();

            JOptionPane.showMessageDialog(null, WarningMessage.UPDATE_S);
            preparedStatement.close();
            Database.getInstance().closeDBConnection();
        } catch (SQLException ex) {
            
ex.printStackTrace();
if (ex.getErrorCode() == 1) {
                JOptionPane.showMessageDialog(null, WarningMessage.UNIQUE_CONSTRAINT_ROOM);
                return;

            };
            if (ex.getErrorCode() == 20001) {

                JOptionPane.showMessageDialog(null, WarningMessage.NOT_EXIST_HOTEL_ID_ER);
                return;

            }
            JOptionPane.showMessageDialog(null, WarningMessage.UNKNOWN_ERROR);
        };
    }//GEN-LAST:event_updateRoomjButton2ActionPerformed

    private void CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_CancelButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InsertUpdateHRoomDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InsertUpdateHRoomDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InsertUpdateHRoomDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InsertUpdateHRoomDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                InsertUpdateHRoomDialog dialog = new InsertUpdateHRoomDialog(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelButton;
    private javax.swing.JLabel descriptionLabel;
    private javax.swing.JTextArea descriptionTextArea;
    private javax.swing.JLabel hotelIdLabel;
    private javax.swing.JTextField hotelIdText;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton newRoomjButton1;
    private javax.swing.JLabel priceLabel;
    private javax.swing.JTextField priceText;
    private javax.swing.JLabel roomNumberLabel;
    private javax.swing.JTextField roomNumberText;
    private javax.swing.JLabel roomTypeLabel;
    private javax.swing.JComboBox roomTypejComboBox1;
    private javax.swing.JButton updateRoomjButton2;
    // End of variables declaration//GEN-END:variables
}
