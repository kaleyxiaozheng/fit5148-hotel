/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Facility;

import Util.SQLStatement;
import Util.WarningMessage;
import hotelappfit5148.Database;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import oracle.jdbc.OracleDriver;

/**
 *
 * @author thaonguyen
 */
public class FacilityPanel extends javax.swing.JPanel {

    Object columnHeaders[] = {"ROOM_NUMBER", "HOTEL_ID", "FACILITY_NUMBER", "DESCRIPTION"};
    Object data[][] = {{}};
    DefaultTableModel dtm = new DefaultTableModel(data, columnHeaders);
    Connection conn = null;
    Statement stmt = null;

    /**
     * Creates new form FacilityPanel
     */
    public FacilityPanel() {
        initComponents();
        showAllFacilityToTable();
    }

    private void showAllFacilityToTable() {
        conn = Database.getInstance().getDBConnection(Database.DB_FIT5148B);
        dtm.setRowCount(0);
        try {
            DriverManager.registerDriver(new OracleDriver());
            stmt = conn.createStatement();
            ResultSet rset = stmt.executeQuery(SQLStatement.SELECT_ALL_FACILITY);

            ResultSetMetaData mdata = rset.getMetaData();
            int numberOfColumns = mdata.getColumnCount();
            Object[] rowData = new Object[numberOfColumns + 1];

            while (rset.next()) {
                for (int i = 0; i < rowData.length - 1; i++) {
                    rowData[i] = rset.getObject(i + 1);
                }

                dtm.addRow(rowData);
            }

            Database.getInstance().closeDBConnection();
        } catch (SQLException f) {
            System.out.println(f.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        newFacilityButton = new javax.swing.JButton();
        updateFacilityButton = new javax.swing.JButton();
        deleteFacilityButton = new javax.swing.JButton();
        HotelScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        searchButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        facilityTextField1 = new javax.swing.JTextField();

        newFacilityButton.setText("New Facility");
        newFacilityButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newFacilityButtonActionPerformed(evt);
            }
        });

        updateFacilityButton.setText("Update");
        updateFacilityButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateFacilityButtonActionPerformed(evt);
            }
        });

        deleteFacilityButton.setText("Delete");
        deleteFacilityButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteFacilityButtonActionPerformed(evt);
            }
        });

        jTable1.setModel(dtm);
        HotelScrollPane1.setViewportView(jTable1);

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Facility Name");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(HotelScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 672, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(facilityTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(searchButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addComponent(newFacilityButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateFacilityButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteFacilityButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(8, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(facilityTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(HotelScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newFacilityButton)
                    .addComponent(updateFacilityButton)
                    .addComponent(deleteFacilityButton))
                .addGap(15, 15, 15))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void newFacilityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newFacilityButtonActionPerformed
        // TODO add your handling code here:
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InsertUpdateFacilityDialog(null, WarningMessage.INSERT_ACT).setVisible(true);
            }
        });

    }//GEN-LAST:event_newFacilityButtonActionPerformed

    private void updateFacilityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateFacilityButtonActionPerformed
        // TODO add your handling code here:
        int selectedRowCount = jTable1.getSelectedRowCount();
        if (selectedRowCount != 1) {
            JOptionPane.showMessageDialog(null, WarningMessage.SELECT_ONE_RECORD);
        } else {
            FacilityBean facility = this.constructFacilityBean();
            /* Create and display the form */
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new InsertUpdateFacilityDialog(facility, WarningMessage.UPDATE_ACT).setVisible(true);
                }
            });
        }
    }//GEN-LAST:event_updateFacilityButtonActionPerformed

    private void deleteFacilityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteFacilityButtonActionPerformed
        // TODO add your handling code here:

        int selectedRowCount = jTable1.getSelectedRowCount();
        if (selectedRowCount > 1) {
            JOptionPane.showMessageDialog(null, WarningMessage.MULTIPLE_SELECTION);
        } else if (selectedRowCount == 0) {
            JOptionPane.showMessageDialog(null, WarningMessage.NO_SELECTION);
        } else {
            int confirmDelete = JOptionPane.showConfirmDialog(null, WarningMessage.CONFIRM_DELETE, null, JOptionPane.YES_NO_OPTION);
            if (JOptionPane.YES_OPTION == confirmDelete) {
                int selectedFacility = jTable1.getSelectedRow();
                String roomNumber = jTable1.getModel().getValueAt(selectedFacility, 0).toString();
                Long hotelId = Long.parseLong(jTable1.getModel().getValueAt(selectedFacility, 1).toString());
                String facilityNumber = jTable1.getModel().getValueAt(selectedFacility, 2).toString();
                PreparedStatement preparedStatement = null;
                Connection dbConnection = Database.getInstance().getDBConnection(Database.DB_FIT5148B);

                try {
                    preparedStatement = dbConnection.prepareStatement(SQLStatement.DELETE_FACILITY);
                    preparedStatement.setString(1, roomNumber);
                    preparedStatement.setLong(2, hotelId);
                    preparedStatement.setString(3, facilityNumber);
                    preparedStatement.executeUpdate();
                    JOptionPane.showMessageDialog(null, WarningMessage.DELETE_S);
                    preparedStatement.close();
                    Database.getInstance().closeDBConnection();
                    this.showAllFacilityToTable();
                } catch (SQLException ex) {
                    Database.getInstance().closeDBConnection();
                    JOptionPane.showMessageDialog(null, WarningMessage.UNKNOWN_ERROR);

                };

            }
        }
    }//GEN-LAST:event_deleteFacilityButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        dtm.setRowCount(0);

        try {
            // TODO add your handling code here:

            String facility = this.facilityTextField1.getText().trim();
            StringBuilder sbSQL = new StringBuilder(SQLStatement.SEARCH_FACILITY_BY_NAME);
            sbSQL.append(facility.toLowerCase()).append("%'");            
            //System.out.print(sbSQL);
            ResultSet rset = Database.getInstance().selectRecords(Database.DB_FIT5148B, sbSQL.toString());
            ResultSetMetaData mdata = rset.getMetaData();
            int numberOfColumns = mdata.getColumnCount();
            while (rset.next()) {
                Object[] rowData = new Object[numberOfColumns];
                for (int i = 0; i < rowData.length; i++) {
                    rowData[i] = rset.getObject(i + 1);
                }
                dtm.addRow(rowData);
            }

        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private FacilityBean constructFacilityBean() {
        FacilityBean facility = new FacilityBean();
        int selectedRoom = jTable1.getSelectedRow();
        facility.setRoomNumber((String) jTable1.getModel().getValueAt(selectedRoom, 0));
        facility.setHotelId(Long.parseLong(jTable1.getModel().getValueAt(selectedRoom, 1).toString()));
        facility.setFacilityNumeber((String) jTable1.getModel().getValueAt(selectedRoom, 2));
        facility.setDescription((String) jTable1.getModel().getValueAt(selectedRoom, 3));
        return facility;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane HotelScrollPane1;
    private javax.swing.JButton deleteFacilityButton;
    private javax.swing.JTextField facilityTextField1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton newFacilityButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton updateFacilityButton;
    // End of variables declaration//GEN-END:variables
}
